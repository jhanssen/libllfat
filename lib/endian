#!/bin/sh
#
# check correct usage of endianess conversion macros:
#
# - a 16-bit value coming from the filesystem is converted with le16toh
# - a 16-bit value to be stored in the filesystem is converted with htole16
#
# the same for the 32-bit values
#
# this is not needed when combining 8-bit values manually (like in a 12-bit
# fat), if it follows the spec

# Copyright (C) 2016 <sgerwk@aol.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

echo "checking endianess"
echo "if nothing is printed after this line, everything is ok"

opp[16]=32
opp[32]=16

for B in 16 32;
do
	# check if some _unit* macro is used without leXtoh or htoleX

	grep _unit$B *.c | grep -v le$B

	# value coming from a unit: leXtoh

	grep " = .*_unit$B" *.c | grep -v le${B}toh
	grep " = .*_unit$B" *.c | grep htole${opp[B]}

	grep "return.*_unit$B" *.c | grep -v le${B}toh
	grep "return.*_unit$B" *.c | grep le${opp[B]}toh

	# value to be stored in a unit: htoleX

	grep "_unit$B.* = " *.c | grep -v htole${B}
	grep "_unit$B.* = " *.c | grep htole${opp[B]}
done

